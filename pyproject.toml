[tool.poetry]
name = "snc"
version = "0.1.0"
description = "Stochastic Network Control "
authors = ["StochasticNetworkControl"]
packages = [
    {include = "snc", from = "src"},
    {include = "examples", from = "src"},
    {include = "experiment", from = "src"},
    {include = "meio", from = "src"},
    {include = "sandbox", from = "src"}
]

# Note: Poetry will exclude files declared in .gitignore when creating the python package file.

[tool.poetry.dependencies]
python = "^3.7"
importlib_metadata = "^1.6"
cplex = "12.10.0.3"
cvxopt = "1.2.3"
cvxpy = "1.1.7"
gorilla = "0.3.0"
matplotlib = "3.2.1"
numpy = "1.18.4"
pandas = "1.0.3"
pycddlib = "2.1.0"
scipy = "^1.6.0"
scs = "2.1.2"
streamlit = "0.74.1"

# Reinforcement Learning
gym = "0.12.0"
tensorflow = "2.1.2"
tensorflow-probability = "0.8.0"
tensorflow-estimator = "2.1.0"
tf-agents = "0.3.0"
tqdm = "4.32.2"

# Sandbox simulator
simpy = "3.0.11"

# Documentation
jupyter = "1.0.0"
jupytext = "1.5.2"
seaborn = "0.9.0"
graphviz = "0.10.1"


[tool.poetry.dev-dependencies]
mock = "4.0.2"
mypy = "0.711"
pylint = "2.3.1"
pytest = "^5.3.5"
pytest-cov = "^2.8.1"
pytest-mock = "1.10.4"
pytest-mypy = "^0.6.1"
pytest-pylint = "^0.17.0"
taskipy = "^1.2.0"
pytest-black = "^0.3.8,!=0.3.10"
pytest-isort = "^1.0.0"

[tool.taskipy.tasks]
lint_strict = "pytest --pylint --cache-clear -m pylint -v && pytest --pylint --cache-clear -m pylint --pylint-rcfile=extrapylint src"
lint = "pytest --pylint --cache-clear -m pylint -v src/experiment src/snc --junitxml=reports/pylint.xml"
mypy = "pytest --mypy --cache-clear -m mypy -v src/experiment src/snc --junitxml=reports/mypy.xml"
quicktest = "pytest -x --ff -rN -Wignore"
test_strict = "pytest --pylint --mypy --black --isort --cache-clear -ra -v --cov snc --cov-report term --cov-report html:cover_html --junitxml=reports/junit.xml -o junit_family=xunit2 && pytest --pylint --cache-clear -m pylint --pylint-rcfile=extrapylint src"
tests = "pytest --cache-clear -ra -v --cov snc --cov-report term --cov-report html:cover_html --junitxml=reports/junit.xml -o junit_family=xunit2"

# Note - Currently doesn't currently include isort and black
test = "task lint && task mypy && task tests"

black = "black ."
isort = "isort --atomic -y"
format = "task isort && task black"
check_format = "pytest -v --cache-clear --black --isort -m 'black or isort'"

[tool.black]
line-length = 95
target-version = ['py37']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
line_length = 95
atomic = true
force_grid_wrap = 0
use_parentheses = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
